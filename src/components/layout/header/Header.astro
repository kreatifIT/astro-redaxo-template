---
import Logo from '@atoms/Logo.astro';
import Hamburger from '@atoms/Hamburger.astro';
import MobileNavigation from '@layout/header/MobileNavigation.astro';
import NavigationItem from '@atoms/NavigationItem.astro';
import LanguagePicker from '@layout/LanguagePicker.astro';
import type {
    Article,
    Clang,
    NavigationItem as INavigationItem,
} from 'redaxo-adapter';
import Container from '@utils/grid/Container.astro';
import Row from '@utils/grid/Row.astro';
import Column from '@utils/grid/Column.astro';
import ShopNav from '@components/shopware/modules/ShopNav.astro';
import CartWidget from '@components/shopware/atoms/CartWidget';
import UserWidget from '@components/shopware/atoms/UserWidget';
import WhistlistWidget from '@components/shopware/atoms/WhishlistWidget';
import SearchWidget from '@components/shopware/atoms/SearchWidget';

interface Props {
    navigation: INavigationItem[];
    siteStartArticle: Article;
    clangs: Clang[];
    contextInstance: any;
    sessionContext: any;
    customer: any;
}

const {
    navigation,
    siteStartArticle,
    clangs,
    contextInstance,
    sessionContext,
    customer,
} = Astro.props;
---

<header
    class="fixed top-0 z-50 flex h-16 w-full items-center bg-gray-100 transition-colors md:h-20 xl:h-24"
    data-header-section
>
    <Container>
        <Row>
            <Column class="w-5/12 md:w-3/12 xl:w-2/12">
                <Logo siteStartArticle={siteStartArticle} />
            </Column>
            <Column class="w-7/12 md:w-9/12 lg:flex-grow-0 xl:w-10/12">
                <nav
                    class="hidden h-full w-full items-center justify-end xl:flex"
                >
                    <ul class="flex">
                        {
                            navigation
                                .filter((c) => c.parentId == null)
                                .map((category) => (
                                    <NavigationItem
                                        {...category}
                                        children={navigation.filter(
                                            (c) => c.parentId == category.id,
                                        )}
                                    />
                                ))
                        }
                        <ShopNav
                            contextInstance={contextInstance}
                            sessionContext={sessionContext}
                        />
                    </ul>

                    <div class="mr-5 flex flex-wrap">
                        <SearchWidget client:only="preact" />
                        <CartWidget client:only="preact" />
                        <UserWidget client:only="preact" />
                        <WhistlistWidget client:only="preact" />
                    </div>

                    <LanguagePicker clangs={clangs} />
                </nav>
                <div
                    class="flex h-full w-full items-center justify-end xl:hidden"
                >
                    <Hamburger />
                    <MobileNavigation navigation={navigation} clangs={clangs} />
                </div>
            </Column>
        </Row>
    </Container>
</header>
