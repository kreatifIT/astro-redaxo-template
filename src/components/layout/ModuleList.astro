---
import type { ArticleAnchor } from '@helpers/@types';
import { moduleToComponent } from '@helpers/modules';
import Module from '@layout/Module.astro';
import { parseModuleValues } from 'redaxo-adapter';
import type { Article } from 'redaxo-adapter';

interface Props {
    article: Article;
    footerModules?: boolean;
}

const { article, footerModules } = Astro.props;
const anchors = article.slices
    .filter((slice) => {
        const values = parseModuleValues(slice.values);
        return values[10]?.anchor_title;
    })
    .map((slice) => {
        const values = parseModuleValues(slice.values);
        return {
            title: values[10]?.anchor_title,
            id: slice.id,
            iconClassName: values[20]?.anchor_icon,
        } as ArticleAnchor;
    });
---

{
    article.slices?.map((slice) => {
        const Component = moduleToComponent.get(slice.moduleCode);
        if (!Component) {
            console.error(
                'no component found for moduleCode:',
                slice.moduleCode,
            );
            return null;
        }
        let parsedSlice = {
            ...slice,
            values: parseModuleValues(slice.values),
            media: parseModuleValues(slice.media),
            link: parseModuleValues(slice.link),
            linkList: parseModuleValues(slice.linkList),
            mediaList: parseModuleValues(slice.mediaList),
        };

        return (
            <Module
                slice={parsedSlice}
                article={article}
                footerModule={footerModules}
            >
                <Component
                    slice={parsedSlice}
                    article={article}
                    anchors={anchors}
                />
            </Module>
        );
    })
}
