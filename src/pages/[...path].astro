---
import RexLayout from '@layouts/RexLayout.astro';
import { getLayoutData } from '@helpers/layout';
import ModuleList from '@layout/ModuleList.astro';
import { performLangRedirect } from '@helpers/lang-redirect';
import { performForward } from '@helpers/forward';
import ArticleLayout from '@layouts/ArticleLayout.astro';
import PopupsManager from '@utils/popup/PopupsManager.astro';
import { getPopups } from '@adapters/redaxo/popups';
import { getPopupData } from '@helpers/popup';

let { path } = Astro.params;
path ??= '/';

if (path.substring(path.lastIndexOf('/') + 1).includes('.')) {
    // exclude file requests
    return new Response();
}

if (path === 'sitemap.xml' || path === 'robots.txt') {
    return Astro.redirect(`${import.meta.env.PUBLIC_REDAXO_ROOT}/${path}`, 301);
}

const {
    contentType,
    article,
    clangs,
    footerArticle,
    currentClang,
    navigation,
    siteStartArticle,
} = await getLayoutData(Astro, path, 2);
const forward = await performForward(contentType, Astro);
if (forward) {
    return forward;
}
const langRedirect = performLangRedirect(Astro, currentClang, clangs);
if (langRedirect) {
    return langRedirect;
}

//const popups = await getPopupData(Astro, article.id);
---

<RexLayout
    article={article}
    currentClang={currentClang}
    metadata={contentType.metadata}
    clangs={clangs}
    footerArticle={footerArticle}
    navigation={navigation}
    siteStartArticle={siteStartArticle}
    path={path}
>
    {
        contentType.type === 'article' && (
            <ArticleLayout article={article} clang={currentClang} />
        )
    }
    <!--<PopupsManager {popups} />-->
</RexLayout>
